name: DockerBuild

on:
  push:
    branches: [ "main" ]
    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest


    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "M@sterk3y"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0" 
          --health-interval 10s
          --health-timeout 10s
          --health-retries 3

    steps:
      - name: Realizando o checkout do fonte
        uses: actions/checkout@v4

      - name: Instalando o SDK do .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Realizando a restauração de pacotes Nuget
        run: dotnet restore

      - name: Instalando a ferramenta dotnet-ef
        run: dotnet tool install --global dotnet-ef

      - name: Adicionando dotnet tools ao PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Esperando o SQL Server iniciar
        run: sleep 30 # Espera 30 segundos para o SQL Server estar pronto

      - name: Aplicando a migration do Entity Framework
        run: dotnet ef database update --project Infrastructure --connection "Server=localhost,1433;Database=contatos;User id=sa;Password=M@sterk3y;TrustServerCertificate=True"
    
      - name: Populando o banco de dados com os estados do Brasil
        run: /opt/mssql-tool/bin/sqlcmd -S localhost -U sa -P "M@sterk3y" -d contatos -i Script/SQL/InsertEstados.sql

      - name: Populando o banco de dados com as regiões do Brasil
        run: /opt/mssql-tool/bin/sqlcmd -S localhost -U sa -P "M@sterk3y" -d contatos -i Script/SQL/InsertRegioes.sql

      - name: Populando o banco de dados com os DDDs
        run: /opt/mssql-tool/bin/sqlcmd -S localhost -U sa -P "M@sterk3y" -d contatos -i Script/SQL/InsertDDDs.sql               

      - name: Realizando o build da aplicação
        run: dotnet build --no-restore --configuration Release

      - name: Executando testes unitários
        run: dotnet test --no-build --configuration Release --logger:trx

      - name: Publicando resultados dos testes unitários
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: '**/*.trx'

      - name: Inicializando o buildx do Docker
        uses: docker/setup-buildx-action@v1
        
      - name: Realizando o login no docker
        uses: docker/login-action@v3.2.0
        with:
          username: 'trickfx'
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Realizando o build e publicação da imagem
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Finalizando a sessão do docker
        run: docker logout
